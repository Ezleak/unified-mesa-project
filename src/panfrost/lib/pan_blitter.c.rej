diff a/src/panfrost/lib/pan_blitter.c b/src/panfrost/lib/pan_blitter.c	(rejected hunks)
@@ -1150,7 +1150,7 @@ pan_preload_emit_dcd(struct pan_pool *pool,
                                         blend.cpu);
         }
 
-        pan_pack(out, DRAW, cfg) {
+        pan_pack(out, DRAW_NO_CS, cfg) {
                 if (zs) {
                         /* ZS_EMIT requires late update/kill */
                         cfg.zs_update_operation = MALI_PIXEL_KILL_FORCE_LATE;
@@ -1225,7 +1225,7 @@ pan_preload_fb_alloc_pre_post_dcds(struct pan_pool *desc_pool,
                 return;
 
         fb->bifrost.pre_post.dcds =
-                pan_pool_alloc_desc_array(desc_pool, 3, DRAW);
+                pan_pool_alloc_desc_array(desc_pool, 3, DRAW_NO_CS);
 }
 
 static void
@@ -1237,7 +1237,7 @@ pan_preload_emit_pre_frame_dcd(struct pan_pool *desc_pool,
         pan_preload_fb_alloc_pre_post_dcds(desc_pool, fb);
         assert(fb->bifrost.pre_post.dcds.cpu);
         void *dcd = fb->bifrost.pre_post.dcds.cpu +
-                    (dcd_idx * pan_size(DRAW));
+                    (dcd_idx * pan_size(DRAW_NO_CS));
 
         /* We only use crc_rt to determine whether to force writes for updating
          * the CRCs, so use a conservative tile size (16x16).
