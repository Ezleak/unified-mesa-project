diff a/src/gallium/drivers/panfrost/pan_job.h b/src/gallium/drivers/panfrost/pan_job.h	(rejected hunks)
@@ -79,6 +79,14 @@ pan_tristate_get(struct pan_tristate state)
         return (state.v == PAN_TRISTATE_TRUE);
 }
 
+enum panfrost_usage_type {
+        PAN_USAGE_READ_VERTEX,
+        PAN_USAGE_WRITE_VERTEX,
+        PAN_USAGE_READ_FRAGMENT,
+        PAN_USAGE_WRITE_FRAGMENT,
+        PAN_USAGE_COUNT,
+};
+
 /* A panfrost_batch corresponds to a bound FBO we're rendering to,
  * collecting over multiple draws. */
 
@@ -194,6 +202,25 @@ struct panfrost_batch {
 
         /* Referenced resources, holds a pipe_reference. */
         struct set *resources;
+
+        struct util_dynarray resource_bos[PAN_USAGE_COUNT];
+
+        /* struct panfrost_usage */
+        struct util_dynarray vert_deps;
+        struct util_dynarray frag_deps;
+
+        /* Referenced dma-bufs FDs, for emitting synchronisation commands. */
+        struct util_dynarray dmabufs;
+
+        /* Command stream pointers for CSF Valhall. Vertex CS tracking is more
+         * complicated as there may be multiple buffers. */
+        pan_command_stream cs_vertex;
+        uint32_t *cs_vertex_last_size;
+        pan_command_stream cs_vertex_first;
+
+        pan_command_stream cs_fragment;
+
+        bool needs_sync;
 };
 
 /* Functions for managing the above */
